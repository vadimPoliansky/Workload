@model WorkloadTest.ViewModels.InstanceListViewModel

@{
    ViewBag.Title = "TaskList";
    ViewBag.allCoes = Model.allCoEs.OrderBy(x => x.CoE);
    ViewBag.allAnalysts = Model.allAnalysts.OrderBy(x => x.First_Name);    
}

<!DOCTYPE html>
<html>
<head>
<link href='../../Scripts/fullcalendar/fullcalendar.css' rel='stylesheet' />
<link href='../../Scripts/fullcalendar/fullcalendar.print.css' rel='stylesheet' media='print' />
<script src='../../Scripts/fullcalendar/jquery.min.js'></script>
<script src='../../Scripts/fullcalendar/jquery-ui.custom.min.js'></script>
<script src='../../Scripts/fullcalendar/fullcalendar.min.js'></script>
<script src='../../Scripts/date.format.js'></script>
<script src='../../Scripts/date.js'></script>

<style>

	body {
		text-align: center;
		font-size: 14px;
	}
		
	#wrap {
		width: 1100px;
		margin: 0 auto;
	}
		
	#external-events {
		float: left;
		width: 150px;
		padding: 0 10px;
		border: 1px solid #ccc;
		background: #eee;
		text-align: left;
	}
		
	#external-events h4 {
		font-size: 16px;
		margin-top: 0;
		padding-top: 1em;
	}
		
	.external-event { /* try to mimick the look of a real event */
		margin: 10px 0;
		padding: 2px 4px;
		background: #3366CC;
		color: #fff;
		font-size: .85em;
		cursor: pointer;
	}
		
	#external-events p {
		margin: 1.5em 0;
		font-size: 11px;
		color: #666;
	}
		
	#external-events p input {
		margin: 0;
		vertical-align: middle;
	}

	#calendar {
		float: right;
		width: 70%;
	}

    .fc-header {
        border:0px !important;
        margin:0px;
    }

    .fc-header-right {
        vertical-align:bottom !important;
    }

    .fc-button {
        background-image:none !important;
    }

    .fc-day-number {
        font-size:large !important;
    }

    .fc-day {
        border:0 !important;
    }

</style>
</head>
<body>
    <br />
    <div class ="small-10 columns">
    <div style="margin-right:10%"id='calendar'></div>
    
        @{string[] colors = {
            "RGB(14, 0, 144)",
            "RGB(144, 0, 0)",
            "RGB(0, 144, 67)",
            "RGB(155, 0, 155)",
            "RGB(0, 153, 153)",
            "RGB(154, 92, 0)",
            "RGB(51, 154, 0)",
        };}
    </div>
    <div class="small-2 columns">
    <input class="button" id="switchColor" value="Color by CoE"></input>
    <div id="coeColors">
    @{
        var k =0;
        foreach(var coe in Model.allCoEs){
            <div class="row"><div class="small-12 columns small-centered">
            <ul style="color:white;background-color:@colors[k]" >@coe.CoE</ul>
            </div></div>
            k++;
        }
    }
    </div>
    <div id="analystColors">
    @{

        var l =0;
        foreach(var analyst in Model.allAnalysts){
            <div class="row"><div class="small-12 columns small-centered">
            <ul style="color:white;background-color:@colors[l]" >@analyst.Last_Name,@analyst.First_Name</ul>
            </div></div>
            l++;
        }
    }
    </div>
    </div>
</body>
  
</html>

    <script>

        $(document).ready(function ($) {

            function getDate(date, format) {
                if (date !== ""){
                    var parsedDate = Date.parse(date.toString()).toString();
                    var realValue = new Date(parsedDate);
                    return realValue.format(format);
                }else{
                    return null;
                }
            }

            var currFilter = 1;
            document.getElementById('analystColors').style.display = "none";

            var colors = [
                @foreach(var color in colors){
                    @:"@color",
                }
            ];

            var eventColorsCoE = {
                @{var i=0;
                foreach(var coe in Model.allCoEs){
                    @:Color_@coe.CoE_ID : colors[@i],
                    i++;
                }}
            }
            var eventColorsAnalyst = {
                @{var j=0;
                foreach(var analyst in Model.allAnalysts){
                    @:Color_@analyst.Analyst_ID: colors[@j],
                    j++;
                }}
            }

            $("#switchColor").on('click',function(){
                var events = $('#calendar').fullCalendar('clientEvents');
                for (var i in events)
                {
                    if (currFilter === 1){
                        var event = events[i];
                        for (var key in eventColorsAnalyst){
                            if(key == "Color_" + event.analyst_id){
                                event.color = eventColorsAnalyst[key];
                            };
                        }
                        $('#calendar').fullCalendar('updateEvent', event);
                    } else {
                        var event = events[i];
                        for (var key in eventColorsCoE){
                            if(key == "Color_" + event.coe_id){
                                event.color = eventColorsCoE[key];
                            };
                        }
                        $('#calendar').fullCalendar('updateEvent', event);
                    }
                }
                if (currFilter === 1){ 
                    currFilter = 0; 
                    this.value = "Color By Analyst";  
                    document.getElementById('coeColors').style.display = "none";
                    document.getElementById('analystColors').style.display = "block";
                } else {
                    currFilter = 1;
                    this.value = "Color By CoE";
                    document.getElementById('coeColors').style.display = "block";
                    document.getElementById('analystColors').style.display = "none";
                }
            });

            $('#calendar').fullCalendar({
                header: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'year,month,agendaWeek,agendaDay'
                },
                editable: true,
                events: [
                @foreach (var task in Model.allInstances)
                {
                    if (task.Task_Date != null)
                    {
                        string allDay;
                        if (task.Task_Date.Value.TimeOfDay.TotalSeconds == 0 && task.Task_Date_From.Value.TimeOfDay.TotalSeconds == 0){
                            allDay = "true";
                        }else{
                            allDay = "false";
                        }
                        <text>
				        {
				            title: "@task.Task_ID:@Model.allCoEs.FirstOrDefault(x=>x.CoE_ID == task.CoE_ID).CoE-@task.Description",
				            start: '@task.Task_Date_From.Value.Year - @task.Task_Date_From.Value.Month - @task.Task_Date_From.Value.Day  @task.Task_Date_From.Value.TimeOfDay',
				            end: '@task.Task_Date.Value.Year - @task.Task_Date.Value.Month - @task.Task_Date.Value.Day  @task.Task_Date.Value.TimeOfDay',
				            task_id: "@task.Task_ID",
				            instance_id: "@task.Instance",
				            comment: "@task.Instance_Comment",
				            allDay: @allDay,
				            analyst_id: "@task.Analyst_ID",
				            coe_id: "@task.CoE_ID",
				            color: eventColorsCoE.Color_@task.CoE_ID,
				        },
                        </text>
                    }
                }
                ],
                editable: true,
                eventDrop: function (event, dayDelta, minuteDelta, allDay, revertFunc) {
                    updateDrop(event, false)
                },
                eventResize: function (event, dayDelta, minuteDelta, allDay, revertFunc) {
                    updateDrop(event, true)
                },
                eventClick: function(calEvent, jsEvent, view) {
                    url = "@Url.Action("Create", "Task", new {id = "XXX"})";
                    url = url.replace( "XXX", calEvent.task_id);
                    window.open(url, "popupWindow", "width=600,height=600,scrollbars=yes");
                },
            });

            function updateDrop(event, resize) {
                $.getJSON('drop', { Task_ID_Filter: parseInt(event.task_id), Instance_ID_Filter: parseInt(event.instance_id) }, function (data) {
                    var exception_id;
                    var comment;
                    var workload;
                    var workloadDays;
                    var workloadUnits;
                    if (data.Exception_ID != 0) {
                        exception_id = data.Exception_ID;
                        comment = data.Comment;
                        workloadDays = data.Workload;
                        workloadUnits = data.Workload_Unit_ID;
                    }
                    var newDate;
                    newDate = event.end == null ? event.start.toUTCString() : event.end.toUTCString();
                    if (resize) {
                        if (event.end !== null){
                            workload = new Date(event.end - event.start);
                            workloadDays = workload / 1000 / 60 / 60 / 24 + 1;
                        } else {
                            workloadDays = null;
                        }
                    }
                    var parameters = [];
                    parameters.push({
                        Task_ID: parseInt(event.task_id),
                        Instance_ID: parseInt(event.instance_id),
                        Date: newDate,
                        Canceled: false,
                        Comment: comment,
                        Exception_ID: exception_id,
                        Workload: workloadDays,
                        Workload_Unit: workloadUnits,
                    })
                    $.ajax({
                        url: "@Url.Action("drop", "Task")",
                        type: 'POST',
                        data: JSON.stringify(parameters),
                        contentType: 'application/json; charset=utf-8',
                        success: function (result) {
                        },
                        error: function (request) {
                        }
                    });
                });
            }
        });

    </script>