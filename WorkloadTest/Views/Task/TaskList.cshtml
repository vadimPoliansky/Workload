@model WorkloadTest.ViewModels.InstanceListViewModel

@{
    ViewBag.Title = "TaskList";
}

<!DOCTYPE html>
<html>
<head>
<link href='../../Scripts/fullcalendar/fullcalendar.css' rel='stylesheet' />
<link href='../../Scripts/fullcalendar/fullcalendar.print.css' rel='stylesheet' media='print' />
<script src='../../Scripts/fullcalendar/jquery.min.js'></script>
<script src='../../Scripts/fullcalendar/jquery-ui.custom.min.js'></script>
<script src='../../Scripts/fullcalendar/fullcalendar.min.js'></script>
<script src='../../Scripts/date.format.js'></script>
<script src='../../Scripts/date.js'></script>
    <script>

        $(document).ready(function ($) {

            function getDate(date, format) {
                if (date !== ""){
                    var parsedDate = Date.parse(date.toString()).toString();
                    var realValue = new Date(parsedDate);
                    return realValue.format(format);
                }else{
                    return null;
                }
            }


            $('#calendar').fullCalendar({
                header: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'year,month,agendaWeek,agendaDay'
                },
                editable: true,
                events: [
                @foreach (var task in Model.allInstances)
                {
                    if (task.Task_Date != null)
                    {
                        string allDay;
                        if (task.Task_Date.Value.TimeOfDay.TotalSeconds == 0 && task.Task_Date_From.Value.TimeOfDay.TotalSeconds == 0){
                            allDay = "true";
                        }else{
                            allDay = "false";
                        }
                        <text>
				        {
				            title: "@task.Task_ID:@Model.allCoEs.FirstOrDefault(x=>x.CoE_ID == task.CoE_ID).CoE-@task.Description",
				            start: '@task.Task_Date_From.Value.Year - @task.Task_Date_From.Value.Month - @task.Task_Date_From.Value.Day  @task.Task_Date_From.Value.TimeOfDay',
				            end: '@task.Task_Date.Value.Year - @task.Task_Date.Value.Month - @task.Task_Date.Value.Day  @task.Task_Date.Value.TimeOfDay',
				            task_id: "@task.Task_ID",
				            instance_id: "@task.Instance",
				            comment: "@task.Instance_Comment",
                            allDay: @allDay,
				        },
                        </text>
                    }
                }
                ],
                editable: true,
                eventDrop: function (event, dayDelta, minuteDelta, allDay, revertFunc) {
                    updateDrop(event, false)
                },
                eventResize: function (event, dayDelta, minuteDelta, allDay, revertFunc) {
                    updateDrop(event, true)
                },
                eventClick: function(calEvent, jsEvent, view) {
                    url = "@Url.Action("Create", "Task", new {id = "XXX"})";
                    url = url.replace( "XXX", calEvent.task_id);
                    window.open(url, "popupWindow", "width=600,height=600,scrollbars=yes");
                }
            });

            function updateDrop(event, resize) {
                $.getJSON('drop', { Task_ID_Filter: parseInt(event.task_id), Instance_ID_Filter: parseInt(event.instance_id) }, function (data) {
                    var exception_id;
                    var comment;
                    var workload;
                    var workloadDays;
                    var workloadUnits;
                    if (data.Exception_ID != 0) {
                        exception_id = data.Exception_ID;
                        comment = data.Comment;
                        workloadDays = data.Workload;
                        workloadUnits = data.Workload_Unit_ID;
                    }
                    var newDate;
                    newDate = event.end == null ? event.start.toUTCString() : event.end.toUTCString();
                    if (resize) {
                        workload = new Date(event.end - event.start);
                        workloadDays = workload / 1000 / 60 / 60 / 24 + 1;
                    }
                    var parameters = [];
                    parameters.push({
                        Task_ID: parseInt(event.task_id),
                        Instance_ID: parseInt(event.instance_id),
                        Date: newDate,
                        Canceled: false,
                        Comment: comment,
                        Exception_ID: exception_id,
                        Workload: workloadDays,
                        Workload_Unit: workloadUnits,
                    })
                    $.ajax({
                        url: "@Url.Action("drop", "Task")",
                        type: 'POST',
                        data: JSON.stringify(parameters),
                        contentType: 'application/json; charset=utf-8',
                        success: function (result) {

                        },
                        error: function (request) {
                        }
                    });
                });
            }
        });

    </script>
<style>

	body {
		margin-top: 40px;
		text-align: center;
		font-size: 14px;
		font-family: "Lucida Grande",Helvetica,Arial,Verdana,sans-serif;
		}

	#calendar {
		width: 900px;
		margin: 0 auto;
		}

</style>
</head>
<body>
<div id='calendar'></div>
</body>
</html>
